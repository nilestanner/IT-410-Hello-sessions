var bodyParser=require("body-parser");var cookieParser=require("cookie-parser");var express=require("express");var LocalStrategy=require("passport-local").Strategy;var passport=require("passport");var session=require("express-session");var app=express();var database={};passport.use(new LocalStrategy(function(c,b,a){if(!database[c]){database[c]={username:c,password:b,keyPairs:[]}}return a(null,database[c])}));passport.serializeUser(function(b,a){a(null,b)});passport.deserializeUser(function(b,a){a(null,b)});app.use(bodyParser.urlencoded({extended:true}));app.use(cookieParser());app.use(session({secret:"secret key",resave:false,saveUninitialized:true}));app.use(passport.initialize());app.use(passport.session());app.put("/",function(b,a){if(!b.user){return a.sendStatus(401)}else{database[b.user.username].keyPairs.push({key:b.query.key,value:b.query.value})}a.send("You have access.")});app.put("/auth",passport.authenticate("local"),function(b,a){a.send("You are authenticated, "+b.user.username)});app.get("/logout",function(b,a){b.logout();a.send("You have logged out.")});app.get("/",function(b,a){if(!b.user){return a.sendStatus(401)}else{return a.send(b.user.keyPairs)}});app.get("/health",function(b,a){return a.sendStatus(200)});app.post("/login",passport.authenticate("local",{successRedirect:"/",failureRedirect:"/protected"}));app.listen(3000,function(){console.log("Server listening on port 3000.")});